"use client"

import { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts'

interface DailyProgress {
  date: string
  day: number
  wordsLearned: number
  wordsMastered: number
  displayDate: string
}

interface LearningChartProps {
  data: DailyProgress[]
  month: string
}

export function LearningChart({ data, month }: LearningChartProps) {
  // Xử lý data để chỉ hiển thị những ngày có activity
  const filteredData = data.filter(d => d.wordsLearned > 0)
  
  if (filteredData.length === 0) {
    return (
      <div className="h-64 flex items-center justify-center bg-gray-50 dark:bg-gray-800/50 rounded-lg border border-dashed border-gray-300 dark:border-gray-600">
        <div className="text-center">
          <div className="text-4xl mb-2">📊</div>
          <p className="text-gray-500 dark:text-gray-400 text-sm">Chưa có dữ liệu học tập trong tháng này</p>
          <p className="text-xs text-gray-400 dark:text-gray-500 mt-1">Hãy bắt đầu học từ vựng để xem tiến trình!</p>
        </div>
      </div>
    )
  }

  return (
    <div className="space-y-4">
      <div className="flex items-center justify-between">
        <h3 className="text-lg font-semibold text-gray-900 dark:text-slate-100">
          Tiến độ học tập - Tháng {month.split('-')[1]}/{month.split('-')[0]}
        </h3>
        <div className="flex items-center gap-4 text-xs">
          <div className="flex items-center gap-1">
            <div className="w-3 h-3 bg-blue-500 rounded-full"></div>
            <span className="text-gray-600 dark:text-gray-400">Từ mới học</span>
          </div>
          <div className="flex items-center gap-1">
            <div className="w-3 h-3 bg-green-500 rounded-full"></div>
            <span className="text-gray-600 dark:text-gray-400">Từ đã thành thạo</span>
          </div>
        </div>
      </div>
      
      <div className="h-64 w-full">
        <ResponsiveContainer width="100%" height="100%">
          <LineChart data={filteredData} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>
            <CartesianGrid strokeDasharray="3 3" className="opacity-30" />
            <XAxis 
              dataKey="displayDate" 
              className="text-xs"
              stroke="currentColor"
              tick={{ fontSize: 12 }}
            />
            <YAxis 
              className="text-xs"
              stroke="currentColor"
              tick={{ fontSize: 12 }}
            />
            <Tooltip 
              contentStyle={{ 
                backgroundColor: 'var(--background)', 
                border: '1px solid var(--border)',
                borderRadius: '6px',
                fontSize: '12px'
              }}
              labelStyle={{ color: 'var(--foreground)' }}
              formatter={(value, name) => [
                value,
                name === 'wordsLearned' ? 'Từ mới học' : 'Từ thành thạo'
              ]}
              labelFormatter={(label) => `Ngày ${label}`}
            />
            <Legend 
              wrapperStyle={{ fontSize: '12px' }}
              formatter={(value) => 
                value === 'wordsLearned' ? 'Từ mới học' : 'Từ thành thạo'
              }
            />
            <Line 
              type="monotone" 
              dataKey="wordsLearned" 
              stroke="#3b82f6" 
              strokeWidth={2}
              dot={{ fill: '#3b82f6', strokeWidth: 2, r: 4 }}
              activeDot={{ r: 6, stroke: '#3b82f6', strokeWidth: 2 }}
            />
            <Line 
              type="monotone" 
              dataKey="wordsMastered" 
              stroke="#10b981" 
              strokeWidth={2}
              dot={{ fill: '#10b981', strokeWidth: 2, r: 4 }}
              activeDot={{ r: 6, stroke: '#10b981', strokeWidth: 2 }}
            />
          </LineChart>
        </ResponsiveContainer>
      </div>
      
      {/* Thống kê nhanh */}
      <div className="grid grid-cols-3 gap-4 p-3 bg-gray-50 dark:bg-gray-800/50 rounded-lg">
        <div className="text-center">
          <p className="text-lg font-bold text-blue-600 dark:text-blue-400">
            {filteredData.reduce((sum, d) => sum + d.wordsLearned, 0)}
          </p>
          <p className="text-xs text-gray-600 dark:text-gray-400">Tổng từ mới</p>
        </div>
        <div className="text-center">
          <p className="text-lg font-bold text-green-600 dark:text-green-400">
            {filteredData.reduce((sum, d) => sum + d.wordsMastered, 0)}
          </p>
          <p className="text-xs text-gray-600 dark:text-gray-400">Đã thành thạo</p>
        </div>
        <div className="text-center">
          <p className="text-lg font-bold text-purple-600 dark:text-purple-400">
            {filteredData.length}
          </p>
          <p className="text-xs text-gray-600 dark:text-gray-400">Ngày học tập</p>
        </div>
      </div>
    </div>
  )
}